const questions = [
  {
    id: 1,
    topic: "Subnetting",
    question:
      "Gegeben ist das Netz 192.168.1.0/24. Teile es in vier gleich große Subnetze und nenne die Netzadressen, Broadcastadressen und nutzbaren Hostbereiche.",
    steps:
      "Schritt 1: /24 -> /26 für 4 Subnetze (zusätzliche 2 Bits). Schritt 2: Subnetzgröße 64 Adressen -> 62 Hosts. Schritt 3: Liste Subnetze: 192.168.1.0/26 (0-63), .64/26, .128/26, .192/26. Broadcast jeweils letzte Adresse. Nutztbare Hosts erste+letzte-1.",
    answer:
      "Subnetz 1: 192.168.1.0/26, Broadcast 192.168.1.63, Hosts 192.168.1.1–192.168.1.62; Subnetz 2: .64/26 -> Broadcast .127, Hosts .65–.126; Subnetz 3: .128/26; Subnetz 4: .192/26.",
  },
  {
    id: 2,
    topic: "Subnetting",
    question: "IP 10.0.0.130/25: Bestimmen Sie Netzwerk-, Broadcast- und nutzbare Hostadressen.",
    steps:
      "Schritt 1: /25 -> Maske 255.255.255.128 -> Netzblöcke 0-127 und 128-255. Schritt 2: 130 liegt im Netz 128-255. Netzwerkadresse ist 10.0.0.128. Broadcast 10.0.0.255. Hosts 10.0.0.129–10.0.0.254.",
    answer: "Netzwerk 10.0.0.128, Broadcast 10.0.0.255, nutzbare Hosts 10.0.0.129–10.0.0.254.",
  },
  {
    id: 3,
    topic: "Subnetting",
    question: "Wie viele nutzbare Hosts hat ein /28 Netz? Erkläre kurz.",
    steps: "Schritt: /28 -> 32-28 = 4 Hostbits -> 2^4=16 Adressen -> abzüglich Netz- und Broadcast -> 14 Hosts.",
    answer: "14 nutzbare Hosts.",
  },
  {
    id: 4,
    topic: "Subnetting",
    question: "Wandle die Adresse 192.168.2.5 in Binär (32 Bits) um und zeige die ersten 24 Bits.",
    steps: "Schritt: 192->11000000, 168->10101000, 2->00000010, 5->00000101. Erste 24 Bits: 11000000.10101000.00000010",
    answer: "192.168.2.5 = 11000000.10101000.00000010.00000101; erste 24 Bits: 11000000.10101000.00000010",
  },
  {
    id: 5,
    topic: "Subnetting",
    question:
      "Gegeben ist das Netz 192.168.1.0/24. Teile es in vier gleich große Subnetze und nenne die Netzadressen, Broadcastadressen und nutzbaren Hostbereiche.",
    steps:
      "Schritt 1: /24 -> /26 für 4 Subnetze (zusätzliche 2 Bits). Schritt 2: Subnetzgröße 64 Adressen -> 62 Hosts. Schritt 3: Liste Subnetze: 192.168.1.0/26 (0-63), .64/26, .128/26, .192/26. Broadcast jeweils letzte Adresse. Nutztbare Hosts erste+letzte-1.",
    answer:
      "Subnetz 1: 192.168.1.0/26, Broadcast 192.168.1.63, Hosts 192.168.1.1–192.168.1.62; Subnetz 2: .64/26 -> Broadcast .127, Hosts .65–.126; Subnetz 3: .128/26; Subnetz 4: .192/26.",
  },
  {
    id: 6,
    topic: "Subnetting",
    question: "IP 10.0.0.130/25: Bestimmen Sie Netzwerk-, Broadcast- und nutzbare Hostadressen.",
    steps:
      "Schritt 1: /25 -> Maske 255.255.255.128 -> Netzblöcke 0-127 und 128-255. Schritt 2: 130 liegt im Netz 128-255. Netzwerkadresse ist 10.0.0.128. Broadcast 10.0.0.255. Hosts 10.0.0.129–10.0.0.254.",
    answer: "Netzwerk 10.0.0.128, Broadcast 10.0.0.255, nutzbare Hosts 10.0.0.129–10.0.0.254.",
  },
  {
    id: 7,
    topic: "Subnetting",
    question: "Wie viele nutzbare Hosts hat ein /28 Netz? Erkläre kurz.",
    steps: "Schritt: /28 -> 32-28 = 4 Hostbits -> 2^4=16 Adressen -> abzüglich Netz- und Broadcast -> 14 Hosts.",
    answer: "14 nutzbare Hosts.",
  },
  {
    id: 8,
    topic: "Subnetting",
    question: "Wandle die Adresse 192.168.2.5 in Binär (32 Bits) um und zeige die ersten 24 Bits.",
    steps: "Schritt: 192->11000000, 168->10101000, 2->00000010, 5->00000101. Erste 24 Bits: 11000000.10101000.00000010",
    answer: "192.168.2.5 = 11000000.10101000.00000010.00000101; erste 24 Bits: 11000000.10101000.00000010",
  },
  {
    id: 9,
    topic: "Subnetting",
    question:
      "Gegeben ist das Netz 192.168.1.0/24. Teile es in vier gleich große Subnetze und nenne die Netzadressen, Broadcastadressen und nutzbaren Hostbereiche.",
    steps:
      "Schritt 1: /24 -> /26 für 4 Subnetze (zusätzliche 2 Bits). Schritt 2: Subnetzgröße 64 Adressen -> 62 Hosts. Schritt 3: Liste Subnetze: 192.168.1.0/26 (0-63), .64/26, .128/26, .192/26. Broadcast jeweils letzte Adresse. Nutztbare Hosts erste+letzte-1.",
    answer:
      "Subnetz 1: 192.168.1.0/26, Broadcast 192.168.1.63, Hosts 192.168.1.1–192.168.1.62; Subnetz 2: .64/26 -> Broadcast .127, Hosts .65–.126; Subnetz 3: .128/26; Subnetz 4: .192/26.",
  },
  {
    id: 10,
    topic: "Subnetting",
    question: "IP 10.0.0.130/25: Bestimmen Sie Netzwerk-, Broadcast- und nutzbare Hostadressen.",
    steps:
      "Schritt 1: /25 -> Maske 255.255.255.128 -> Netzblöcke 0-127 und 128-255. Schritt 2: 130 liegt im Netz 128-255. Netzwerkadresse ist 10.0.0.128. Broadcast 10.0.0.255. Hosts 10.0.0.129–10.0.0.254.",
    answer: "Netzwerk 10.0.0.128, Broadcast 10.0.0.255, nutzbare Hosts 10.0.0.129–10.0.0.254.",
  },
  {
    id: 11,
    topic: "Subnetting",
    question: "Wie viele nutzbare Hosts hat ein /28 Netz? Erkläre kurz.",
    steps: "Schritt: /28 -> 32-28 = 4 Hostbits -> 2^4=16 Adressen -> abzüglich Netz- und Broadcast -> 14 Hosts.",
    answer: "14 nutzbare Hosts.",
  },
  {
    id: 12,
    topic: "Subnetting",
    question: "Wandle die Adresse 192.168.2.5 in Binär (32 Bits) um und zeige die ersten 24 Bits.",
    steps: "Schritt: 192->11000000, 168->10101000, 2->00000010, 5->00000101. Erste 24 Bits: 11000000.10101000.00000010",
    answer: "192.168.2.5 = 11000000.10101000.00000010.00000101; erste 24 Bits: 11000000.10101000.00000010",
  },
  {
    id: 13,
    topic: "Subnetting",
    question:
      "Gegeben ist das Netz 192.168.1.0/24. Teile es in vier gleich große Subnetze und nenne die Netzadressen, Broadcastadressen und nutzbaren Hostbereiche.",
    steps:
      "Schritt 1: /24 -> /26 für 4 Subnetze (zusätzliche 2 Bits). Schritt 2: Subnetzgröße 64 Adressen -> 62 Hosts. Schritt 3: Liste Subnetze: 192.168.1.0/26 (0-63), .64/26, .128/26, .192/26. Broadcast jeweils letzte Adresse. Nutztbare Hosts erste+letzte-1.",
    answer:
      "Subnetz 1: 192.168.1.0/26, Broadcast 192.168.1.63, Hosts 192.168.1.1–192.168.1.62; Subnetz 2: .64/26 -> Broadcast .127, Hosts .65–.126; Subnetz 3: .128/26; Subnetz 4: .192/26.",
  },
  {
    id: 14,
    topic: "Subnetting",
    question: "IP 10.0.0.130/25: Bestimmen Sie Netzwerk-, Broadcast- und nutzbare Hostadressen.",
    steps:
      "Schritt 1: /25 -> Maske 255.255.255.128 -> Netzblöcke 0-127 und 128-255. Schritt 2: 130 liegt im Netz 128-255. Netzwerkadresse ist 10.0.0.128. Broadcast 10.0.0.255. Hosts 10.0.0.129–10.0.0.254.",
    answer: "Netzwerk 10.0.0.128, Broadcast 10.0.0.255, nutzbare Hosts 10.0.0.129–10.0.0.254.",
  },
  {
    id: 15,
    topic: "Subnetting",
    question: "Wie viele nutzbare Hosts hat ein /28 Netz? Erkläre kurz.",
    steps: "Schritt: /28 -> 32-28 = 4 Hostbits -> 2^4=16 Adressen -> abzüglich Netz- und Broadcast -> 14 Hosts.",
    answer: "14 nutzbare Hosts.",
  },
  {
    id: 16,
    topic: "Subnetting",
    question: "Wandle die Adresse 192.168.2.5 in Binär (32 Bits) um und zeige die ersten 24 Bits.",
    steps: "Schritt: 192->11000000, 168->10101000, 2->00000010, 5->00000101. Erste 24 Bits: 11000000.10101000.00000010",
    answer: "192.168.2.5 = 11000000.10101000.00000010.00000101; erste 24 Bits: 11000000.10101000.00000010",
  },
  {
    id: 17,
    topic: "Subnetting",
    question:
      "Gegeben ist das Netz 192.168.1.0/24. Teile es in vier gleich große Subnetze und nenne die Netzadressen, Broadcastadressen und nutzbaren Hostbereiche.",
    steps:
      "Schritt 1: /24 -> /26 für 4 Subnetze (zusätzliche 2 Bits). Schritt 2: Subnetzgröße 64 Adressen -> 62 Hosts. Schritt 3: Liste Subnetze: 192.168.1.0/26 (0-63), .64/26, .128/26, .192/26. Broadcast jeweils letzte Adresse. Nutztbare Hosts erste+letzte-1.",
    answer:
      "Subnetz 1: 192.168.1.0/26, Broadcast 192.168.1.63, Hosts 192.168.1.1–192.168.1.62; Subnetz 2: .64/26 -> Broadcast .127, Hosts .65–.126; Subnetz 3: .128/26; Subnetz 4: .192/26.",
  },
  {
    id: 18,
    topic: "Subnetting",
    question: "IP 10.0.0.130/25: Bestimmen Sie Netzwerk-, Broadcast- und nutzbare Hostadressen.",
    steps:
      "Schritt 1: /25 -> Maske 255.255.255.128 -> Netzblöcke 0-127 und 128-255. Schritt 2: 130 liegt im Netz 128-255. Netzwerkadresse ist 10.0.0.128. Broadcast 10.0.0.255. Hosts 10.0.0.129–10.0.0.254.",
    answer: "Netzwerk 10.0.0.128, Broadcast 10.0.0.255, nutzbare Hosts 10.0.0.129–10.0.0.254.",
  },
  {
    id: 19,
    topic: "Subnetting",
    question: "Wie viele nutzbare Hosts hat ein /28 Netz? Erkläre kurz.",
    steps: "Schritt: /28 -> 32-28 = 4 Hostbits -> 2^4=16 Adressen -> abzüglich Netz- und Broadcast -> 14 Hosts.",
    answer: "14 nutzbare Hosts.",
  },
  {
    id: 20,
    topic: "Subnetting",
    question: "Wandle die Adresse 192.168.2.5 in Binär (32 Bits) um und zeige die ersten 24 Bits.",
    steps: "Schritt: 192->11000000, 168->10101000, 2->00000010, 5->00000101. Erste 24 Bits: 11000000.10101000.00000010",
    answer: "192.168.2.5 = 11000000.10101000.00000010.00000101; erste 24 Bits: 11000000.10101000.00000010",
  },
  {
    id: 21,
    topic: "IPv4",
    question: "Erkläre kurz, was CIDR-Notation /22 bedeutet und wie viele Adressen enthalten sind.",
    steps: "Schritt: /22 -> Hostbits = 32-22=10 -> 2^10=1024 Adressen. Netzmaske 255.255.252.0.",
    answer: "/22 bedeutet Präfixlänge 22; 1024 Adressen insgesamt; Maske 255.255.252.0.",
  },
  {
    id: 22,
    topic: "IPv4",
    question: "Berechne für 172.16.5.200/26 Netzwerk, Broadcast und Hostbereich.",
    steps:
      "Schritt: /26 -> Blockgröße 64. Subnetze bei 172.16.5.0, .64, .128, .192. 200 liegt in .192 Netz. Netzwerk 172.16.5.192, Broadcast .255, Hosts .193–.254.",
    answer: "Netzwerk 172.16.5.192, Broadcast 172.16.5.255, Hosts 172.16.5.193–172.16.5.254.",
  },
  {
    id: 23,
    topic: "IPv4",
    question: "Was ist die Funktion einer Subnetzmaske? Kurz erklären.",
    steps: "Schritt: Maske trennt Bits in Netzwerk- und Hostanteil; dargestellt als Einsen in Bitfolge oder Dezimal 255.x.x.x.",
    answer: "Die Subnetzmaske trennt Netzwerk-/Hostanteil und bestimmt, welche Bits zur Netzadresse gehören.",
  },
  {
    id: 24,
    topic: "IPv4",
    question: "Erkläre kurz, was CIDR-Notation /22 bedeutet und wie viele Adressen enthalten sind.",
    steps: "Schritt: /22 -> Hostbits = 32-22=10 -> 2^10=1024 Adressen. Netzmaske 255.255.252.0.",
    answer: "/22 bedeutet Präfixlänge 22; 1024 Adressen insgesamt; Maske 255.255.252.0.",
  },
  {
    id: 25,
    topic: "IPv4",
    question: "Berechne für 172.16.5.200/26 Netzwerk, Broadcast und Hostbereich.",
    steps:
      "Schritt: /26 -> Blockgröße 64. Subnetze bei 172.16.5.0, .64, .128, .192. 200 liegt in .192 Netz. Netzwerk 172.16.5.192, Broadcast .255, Hosts .193–.254.",
    answer: "Netzwerk 172.16.5.192, Broadcast 172.16.5.255, Hosts 172.16.5.193–172.16.5.254.",
  },
  {
    id: 26,
    topic: "IPv4",
    question: "Was ist die Funktion einer Subnetzmaske? Kurz erklären.",
    steps: "Schritt: Maske trennt Bits in Netzwerk- und Hostanteil; dargestellt als Einsen in Bitfolge oder Dezimal 255.x.x.x.",
    answer: "Die Subnetzmaske trennt Netzwerk-/Hostanteil und bestimmt, welche Bits zur Netzadresse gehören.",
  },
  {
    id: 27,
    topic: "IPv4",
    question: "Erkläre kurz, was CIDR-Notation /22 bedeutet und wie viele Adressen enthalten sind.",
    steps: "Schritt: /22 -> Hostbits = 32-22=10 -> 2^10=1024 Adressen. Netzmaske 255.255.252.0.",
    answer: "/22 bedeutet Präfixlänge 22; 1024 Adressen insgesamt; Maske 255.255.252.0.",
  },
  {
    id: 28,
    topic: "IPv4",
    question: "Berechne für 172.16.5.200/26 Netzwerk, Broadcast und Hostbereich.",
    steps:
      "Schritt: /26 -> Blockgröße 64. Subnetze bei 172.16.5.0, .64, .128, .192. 200 liegt in .192 Netz. Netzwerk 172.16.5.192, Broadcast .255, Hosts .193–.254.",
    answer: "Netzwerk 172.16.5.192, Broadcast 172.16.5.255, Hosts 172.16.5.193–172.16.5.254.",
  },
  {
    id: 29,
    topic: "IPv4",
    question: "Was ist die Funktion einer Subnetzmaske? Kurz erklären.",
    steps: "Schritt: Maske trennt Bits in Netzwerk- und Hostanteil; dargestellt als Einsen in Bitfolge oder Dezimal 255.x.x.x.",
    answer: "Die Subnetzmaske trennt Netzwerk-/Hostanteil und bestimmt, welche Bits zur Netzadresse gehören.",
  },
  {
    id: 30,
    topic: "IPv4",
    question: "Erkläre kurz, was CIDR-Notation /22 bedeutet und wie viele Adressen enthalten sind.",
    steps: "Schritt: /22 -> Hostbits = 32-22=10 -> 2^10=1024 Adressen. Netzmaske 255.255.252.0.",
    answer: "/22 bedeutet Präfixlänge 22; 1024 Adressen insgesamt; Maske 255.255.252.0.",
  },
  {
    id: 31,
    topic: "IPv4",
    question: "Berechne für 172.16.5.200/26 Netzwerk, Broadcast und Hostbereich.",
    steps:
      "Schritt: /26 -> Blockgröße 64. Subnetze bei 172.16.5.0, .64, .128, .192. 200 liegt in .192 Netz. Netzwerk 172.16.5.192, Broadcast .255, Hosts .193–.254.",
    answer: "Netzwerk 172.16.5.192, Broadcast 172.16.5.255, Hosts 172.16.5.193–172.16.5.254.",
  },
  {
    id: 32,
    topic: "IPv4",
    question: "Was ist die Funktion einer Subnetzmaske? Kurz erklären.",
    steps: "Schritt: Maske trennt Bits in Netzwerk- und Hostanteil; dargestellt als Einsen in Bitfolge oder Dezimal 255.x.x.x.",
    answer: "Die Subnetzmaske trennt Netzwerk-/Hostanteil und bestimmt, welche Bits zur Netzadresse gehören.",
  },
  {
    id: 33,
    topic: "IPv6",
    question: "Schreibe die IPv6-Adresse 2001:0db8:0000:0000:0000:ff00:0042:8329 verkürzt.",
    steps: "Schritt: Entferne führende Nullen in jedem Block und komprimiere längste Nullreihe: 2001:db8::ff00:42:8329",
    answer: "2001:db8::ff00:42:8329",
  },
  {
    id: 34,
    topic: "IPv6",
    question: "Was ist ein Link-Local-Präfix in IPv6 und wofür wird es verwendet?",
    steps:
      "Schritt: Link-Local Adressen beginnen mit fe80::/10; werden für lokale Kommunikation im gleichen Segment verwendet und nicht global geroutet.",
    answer: "fe80::/10, für lokale Autokonfiguration und Kommunikation im selben Link.",
  },
  {
    id: 35,
    topic: "IPv6",
    question: "Warum ist in IPv6 /64 das Standard-Subnetz für LANs?",
    steps: "Schritt: Interface-Identifier standardmäßig 64 Bit (SLAAC benötigt 64 Bit), Kompatibilität mit Autokonfiguration.",
    answer: "Weil SLAAC und Interface-ID-Mechanismen auf einem 64-Bit-Hostanteil basieren, daher /64 üblich.",
  },
  {
    id: 36,
    topic: "IPv6",
    question: "Schreibe die IPv6-Adresse 2001:0db8:0000:0000:0000:ff00:0042:8329 verkürzt.",
    steps: "Schritt: Entferne führende Nullen in jedem Block und komprimiere längste Nullreihe: 2001:db8::ff00:42:8329",
    answer: "2001:db8::ff00:42:8329",
  },
  {
    id: 37,
    topic: "IPv6",
    question: "Was ist ein Link-Local-Präfix in IPv6 und wofür wird es verwendet?",
    steps:
      "Schritt: Link-Local Adressen beginnen mit fe80::/10; werden für lokale Kommunikation im gleichen Segment verwendet und nicht global geroutet.",
    answer: "fe80::/10, für lokale Autokonfiguration und Kommunikation im selben Link.",
  },
  {
    id: 38,
    topic: "IPv6",
    question: "Warum ist in IPv6 /64 das Standard-Subnetz für LANs?",
    steps: "Schritt: Interface-Identifier standardmäßig 64 Bit (SLAAC benötigt 64 Bit), Kompatibilität mit Autokonfiguration.",
    answer: "Weil SLAAC und Interface-ID-Mechanismen auf einem 64-Bit-Hostanteil basieren, daher /64 üblich.",
  },
  {
    id: 39,
    topic: "IPv6",
    question: "Schreibe die IPv6-Adresse 2001:0db8:0000:0000:0000:ff00:0042:8329 verkürzt.",
    steps: "Schritt: Entferne führende Nullen in jedem Block und komprimiere längste Nullreihe: 2001:db8::ff00:42:8329",
    answer: "2001:db8::ff00:42:8329",
  },
  {
    id: 40,
    topic: "IPv6",
    question: "Was ist ein Link-Local-Präfix in IPv6 und wofür wird es verwendet?",
    steps:
      "Schritt: Link-Local Adressen beginnen mit fe80::/10; werden für lokale Kommunikation im gleichen Segment verwendet und nicht global geroutet.",
    answer: "fe80::/10, für lokale Autokonfiguration und Kommunikation im selben Link.",
  },
  {
    id: 41,
    topic: "IPv6",
    question: "Warum ist in IPv6 /64 das Standard-Subnetz für LANs?",
    steps: "Schritt: Interface-Identifier standardmäßig 64 Bit (SLAAC benötigt 64 Bit), Kompatibilität mit Autokonfiguration.",
    answer: "Weil SLAAC und Interface-ID-Mechanismen auf einem 64-Bit-Hostanteil basieren, daher /64 üblich.",
  },
  {
    id: 42,
    topic: "IPv6",
    question: "Schreibe die IPv6-Adresse 2001:0db8:0000:0000:0000:ff00:0042:8329 verkürzt.",
    steps: "Schritt: Entferne führende Nullen in jedem Block und komprimiere längste Nullreihe: 2001:db8::ff00:42:8329",
    answer: "2001:db8::ff00:42:8329",
  },
  {
    id: 43,
    topic: "Netzwerkgrundlagen",
    question: "Nenne drei Unterschiede zwischen Switch und Router.",
    steps: "Schritt: Switch arbeitet auf Layer2 (MAC), Router auf Layer3 (IP), Switch verbindet Segmente, Router routet zwischen Netzen.",
    answer: "Switch: MAC-basiert, verbindet Geräte im LAN; Router: IP-basiert, verbindet Netze und leitet weiter.",
  },
  {
    id: 44,
    topic: "Netzwerkgrundlagen",
    question: "Was ist DHCP und wie funktioniert es kurz?",
    steps: "Schritt: DHCP vergibt dynamisch IP-Adressen; Ablauf: Discover, Offer, Request, Ack.",
    answer: "DHCP weist automatisch IP, Gateway, DNS zu; Ablauf D-O-R-A.",
  },
  {
    id: 45,
    topic: "Netzwerkgrundlagen",
    question: "Erkläre kurz das OSI-Modell und nenne zwei Schichten mit Aufgaben.",
    steps: "Schritt: 7 Schichten; z.B. Schicht 2 Data Link = MAC, Switches; Schicht 3 Netzwerk = IP, Routing.",
    answer: "OSI: 7 Schichten; Beispiel: Layer2 Data Link (Rahmen, MAC), Layer3 Netzwerk (Routing, IP).",
  },
  {
    id: 46,
    topic: "Netzwerkgrundlagen",
    question: "Nenne drei Unterschiede zwischen Switch und Router.",
    steps: "Schritt: Switch arbeitet auf Layer2 (MAC), Router auf Layer3 (IP), Switch verbindet Segmente, Router routet zwischen Netzen.",
    answer: "Switch: MAC-basiert, verbindet Geräte im LAN; Router: IP-basiert, verbindet Netze und leitet weiter.",
  },
  {
    id: 47,
    topic: "Netzwerkgrundlagen",
    question: "Was ist DHCP und wie funktioniert es kurz?",
    steps: "Schritt: DHCP vergibt dynamisch IP-Adressen; Ablauf: Discover, Offer, Request, Ack.",
    answer: "DHCP weist automatisch IP, Gateway, DNS zu; Ablauf D-O-R-A.",
  },
  {
    id: 48,
    topic: "Netzwerkgrundlagen",
    question: "Erkläre kurz das OSI-Modell und nenne zwei Schichten mit Aufgaben.",
    steps: "Schritt: 7 Schichten; z.B. Schicht 2 Data Link = MAC, Switches; Schicht 3 Netzwerk = IP, Routing.",
    answer: "OSI: 7 Schichten; Beispiel: Layer2 Data Link (Rahmen, MAC), Layer3 Netzwerk (Routing, IP).",
  },
  {
    id: 49,
    topic: "Netzwerkgrundlagen",
    question: "Nenne drei Unterschiede zwischen Switch und Router.",
    steps: "Schritt: Switch arbeitet auf Layer2 (MAC), Router auf Layer3 (IP), Switch verbindet Segmente, Router routet zwischen Netzen.",
    answer: "Switch: MAC-basiert, verbindet Geräte im LAN; Router: IP-basiert, verbindet Netze und leitet weiter.",
  },
  {
    id: 50,
    topic: "Netzwerkgrundlagen",
    question: "Was ist DHCP und wie funktioniert es kurz?",
    steps: "Schritt: DHCP vergibt dynamisch IP-Adressen; Ablauf: Discover, Offer, Request, Ack.",
    answer: "DHCP weist automatisch IP, Gateway, DNS zu; Ablauf D-O-R-A.",
  },
  {
    id: 51,
    topic: "Wertanalyse",
    question: "Was ist das Hauptziel der Wertanalyse?",
    steps: "Schritt: Funktionen analysieren, Kosten bewerten, Einsparpotential identifizieren ohne Verlust von Funktionalität.",
    answer: "Hauptziel: Kostensenkung bei Erhalt oder Steigerung des Nutzens durch Funktionsanalyse.",
  },
  {
    id: 52,
    topic: "Wertanalyse",
    question: "Nenne drei Schritte einer Funktionsanalyse.",
    steps: "Schritt: Funktionen identifizieren, Haupt-/Nebenfunktionen unterscheiden, Priorisieren nach Kosten/Nutzen.",
    answer: "Identifikation, Klassifikation (Haupt/Neben), Bewertung/Priorisierung.",
  },
  {
    id: 53,
    topic: "Wertanalyse",
    question: "Was ist das Hauptziel der Wertanalyse?",
    steps: "Schritt: Funktionen analysieren, Kosten bewerten, Einsparpotential identifizieren ohne Verlust von Funktionalität.",
    answer: "Hauptziel: Kostensenkung bei Erhalt oder Steigerung des Nutzens durch Funktionsanalyse.",
  },
  {
    id: 54,
    topic: "Wertanalyse",
    question: "Nenne drei Schritte einer Funktionsanalyse.",
    steps: "Schritt: Funktionen identifizieren, Haupt-/Nebenfunktionen unterscheiden, Priorisieren nach Kosten/Nutzen.",
    answer: "Identifikation, Klassifikation (Haupt/Neben), Bewertung/Priorisierung.",
  },
  {
    id: 55,
    topic: "Wertanalyse",
    question: "Was ist das Hauptziel der Wertanalyse?",
    steps: "Schritt: Funktionen analysieren, Kosten bewerten, Einsparpotential identifizieren ohne Verlust von Funktionalität.",
    answer: "Hauptziel: Kostensenkung bei Erhalt oder Steigerung des Nutzens durch Funktionsanalyse.",
  },
  {
    id: 56,
    topic: "Wertanalyse",
    question: "Nenne drei Schritte einer Funktionsanalyse.",
    steps: "Schritt: Funktionen identifizieren, Haupt-/Nebenfunktionen unterscheiden, Priorisieren nach Kosten/Nutzen.",
    answer: "Identifikation, Klassifikation (Haupt/Neben), Bewertung/Priorisierung.",
  },
  {
    id: 57,
    topic: "Projektmanagement",
    question: "Nenne die vier klassischen Projektphasen.",
    steps: "Schritt: Initiierung, Planung, Durchführung, Abschluss.",
    answer: "Initiierung, Planung, Durchführung, Abschluss.",
  },
  {
    id: 58,
    topic: "Projektmanagement",
    question: "Was bedeutet SMART bei Zieldefinition?",
    steps: "Schritt: S-Spezifisch, M-Messbar, A-Akzeptiert/Attraktiv, R-Realistisch, T-Terminiert.",
    answer: "SMART = Spezifisch, Messbar, Attraktiv/Akzeptiert, Realistisch, Terminiert.",
  },
  {
    id: 59,
    topic: "Projektmanagement",
    question: "Nenne die vier klassischen Projektphasen.",
    steps: "Schritt: Initiierung, Planung, Durchführung, Abschluss.",
    answer: "Initiierung, Planung, Durchführung, Abschluss.",
  },
  {
    id: 60,
    topic: "Projektmanagement",
    question: "Was bedeutet SMART bei Zieldefinition?",
    steps: "Schritt: S-Spezifisch, M-Messbar, A-Akzeptiert/Attraktiv, R-Realistisch, T-Terminiert.",
    answer: "SMART = Spezifisch, Messbar, Attraktiv/Akzeptiert, Realistisch, Terminiert.",
  },
  {
    id: 61,
    topic: "Projektmanagement",
    question: "Nenne die vier klassischen Projektphasen.",
    steps: "Schritt: Initiierung, Planung, Durchführung, Abschluss.",
    answer: "Initiierung, Planung, Durchführung, Abschluss.",
  },
  {
    id: 62,
    topic: "Projektmanagement",
    question: "Was bedeutet SMART bei Zieldefinition?",
    steps: "Schritt: S-Spezifisch, M-Messbar, A-Akzeptiert/Attraktiv, R-Realistisch, T-Terminiert.",
    answer: "SMART = Spezifisch, Messbar, Attraktiv/Akzeptiert, Realistisch, Terminiert.",
  },
  {
    id: 63,
    topic: "Projektmanagement",
    question: "Nenne die vier klassischen Projektphasen.",
    steps: "Schritt: Initiierung, Planung, Durchführung, Abschluss.",
    answer: "Initiierung, Planung, Durchführung, Abschluss.",
  },
  {
    id: 64,
    topic: "Projektmanagement",
    question: "Was bedeutet SMART bei Zieldefinition?",
    steps: "Schritt: S-Spezifisch, M-Messbar, A-Akzeptiert/Attraktiv, R-Realistisch, T-Terminiert.",
    answer: "SMART = Spezifisch, Messbar, Attraktiv/Akzeptiert, Realistisch, Terminiert.",
  },
  {
    id: 65,
    topic: "BWL",
    question: "Erkläre kurz den Unterschied zwischen Fixkosten und variablen Kosten.",
    steps: "Schritt: Fixkosten unabhängig von Produktionsmenge (Miete), variable Kosten abhängig (Material).",
    answer: "Fixkosten bleiben konstant, variable Kosten ändern sich mit Menge.",
  },
  {
    id: 66,
    topic: "BWL",
    question: "Wie berechnet man den Deckungsbeitrag (einfach)?",
    steps: "Schritt: Deckungsbeitrag = Verkaufspreis - variable Kosten.",
    answer: "DB = Verkaufspreis - variable Kosten.",
  },
  {
    id: 67,
    topic: "BWL",
    question: "Erkläre kurz den Unterschied zwischen Fixkosten und variablen Kosten.",
    steps: "Schritt: Fixkosten unabhängig von Produktionsmenge (Miete), variable Kosten abhängig (Material).",
    answer: "Fixkosten bleiben konstant, variable Kosten ändern sich mit Menge.",
  },
  {
    id: 68,
    topic: "BWL",
    question: "Wie berechnet man den Deckungsbeitrag (einfach)?",
    steps: "Schritt: Deckungsbeitrag = Verkaufspreis - variable Kosten.",
    answer: "DB = Verkaufspreis - variable Kosten.",
  },
  {
    id: 69,
    topic: "BWL",
    question: "Erkläre kurz den Unterschied zwischen Fixkosten und variablen Kosten.",
    steps: "Schritt: Fixkosten unabhängig von Produktionsmenge (Miete), variable Kosten abhängig (Material).",
    answer: "Fixkosten bleiben konstant, variable Kosten ändern sich mit Menge.",
  },
  {
    id: 70,
    topic: "BWL",
    question: "Wie berechnet man den Deckungsbeitrag (einfach)?",
    steps: "Schritt: Deckungsbeitrag = Verkaufspreis - variable Kosten.",
    answer: "DB = Verkaufspreis - variable Kosten.",
  },
  {
    id: 71,
    topic: "Datenbanken",
    question: "Was ist ein Primärschlüssel in einer Tabelle und warum wichtig?",
    steps: "Schritt: Eindeutiges Attribut, identifiziert Datensatz, unterstützt Joins und Integrität.",
    answer: "Primärschlüssel ist eindeutiger Identifikator für jeden Datensatz.",
  },
  {
    id: 72,
    topic: "Datenbanken",
    question: "Was bedeutet Normalisierung kurz (1. Normalform)?",
    steps: "Schritt: 1NF: atomic values, keine Wiederholgruppen, jede Zelle atomar.",
    answer: "1NF: Werte atomar, keine Mehrfachwerte in einer Spalte.",
  },
  {
    id: 73,
    topic: "Datenbanken",
    question: "Was ist ein Primärschlüssel in einer Tabelle und warum wichtig?",
    steps: "Schritt: Eindeutiges Attribut, identifiziert Datensatz, unterstützt Joins und Integrität.",
    answer: "Primärschlüssel ist eindeutiger Identifikator für jeden Datensatz.",
  },
  {
    id: 74,
    topic: "Datenbanken",
    question: "Was bedeutet Normalisierung kurz (1. Normalform)?",
    steps: "Schritt: 1NF: atomic values, keine Wiederholgruppen, jede Zelle atomar.",
    answer: "1NF: Werte atomar, keine Mehrfachwerte in einer Spalte.",
  },
  {
    id: 75,
    topic: "Datenbanken",
    question: "Was ist ein Primärschlüssel in einer Tabelle und warum wichtig?",
    steps: "Schritt: Eindeutiges Attribut, identifiziert Datensatz, unterstützt Joins und Integrität.",
    answer: "Primärschlüssel ist eindeutiger Identifikator für jeden Datensatz.",
  },
  {
    id: 76,
    topic: "Datenbanken",
    question: "Was bedeutet Normalisierung kurz (1. Normalform)?",
    steps: "Schritt: 1NF: atomic values, keine Wiederholgruppen, jede Zelle atomar.",
    answer: "1NF: Werte atomar, keine Mehrfachwerte in einer Spalte.",
  },
  {
    id: 77,
    topic: "Datenbanken",
    question: "Was ist ein Primärschlüssel in einer Tabelle und warum wichtig?",
    steps: "Schritt: Eindeutiges Attribut, identifiziert Datensatz, unterstützt Joins und Integrität.",
    answer: "Primärschlüssel ist eindeutiger Identifikator für jeden Datensatz.",
  },
  {
    id: 78,
    topic: "Datenbanken",
    question: "Was bedeutet Normalisierung kurz (1. Normalform)?",
    steps: "Schritt: 1NF: atomic values, keine Wiederholgruppen, jede Zelle atomar.",
    answer: "1NF: Werte atomar, keine Mehrfachwerte in einer Spalte.",
  },
  {
    id: 79,
    topic: "SQL",
    question: "Schreibe eine SQL-Abfrage: Alle Kunden mit Land = 'DE' auswählen.",
    steps: "Schritt: SELECT * FROM Kunden WHERE Land = 'DE';",
    answer: "SELECT * FROM Kunden WHERE Land = 'DE';",
  },
  {
    id: 80,
    topic: "SQL",
    question: "Was macht ein JOIN in SQL? Kurz erklären.",
    steps: "Schritt: JOIN verbindet zwei Tabellen über gemeinsame Spalte, z.B. KundeID.",
    answer: "JOIN verbindet Tabellen, um zusammenhängende Daten zu kombinieren.",
  },
  {
    id: 81,
    topic: "SQL",
    question: "Schreibe eine SQL-Abfrage: Alle Kunden mit Land = 'DE' auswählen.",
    steps: "Schritt: SELECT * FROM Kunden WHERE Land = 'DE';",
    answer: "SELECT * FROM Kunden WHERE Land = 'DE';",
  },
  {
    id: 82,
    topic: "SQL",
    question: "Was macht ein JOIN in SQL? Kurz erklären.",
    steps: "Schritt: JOIN verbindet zwei Tabellen über gemeinsame Spalte, z.B. KundeID.",
    answer: "JOIN verbindet Tabellen, um zusammenhängende Daten zu kombinieren.",
  },
  {
    id: 83,
    topic: "SQL",
    question: "Schreibe eine SQL-Abfrage: Alle Kunden mit Land = 'DE' auswählen.",
    steps: "Schritt: SELECT * FROM Kunden WHERE Land = 'DE';",
    answer: "SELECT * FROM Kunden WHERE Land = 'DE';",
  },
  {
    id: 84,
    topic: "SQL",
    question: "Was macht ein JOIN in SQL? Kurz erklären.",
    steps: "Schritt: JOIN verbindet zwei Tabellen über gemeinsame Spalte, z.B. KundeID.",
    answer: "JOIN verbindet Tabellen, um zusammenhängende Daten zu kombinieren.",
  },
  {
    id: 85,
    topic: "SQL",
    question: "Schreibe eine SQL-Abfrage: Alle Kunden mit Land = 'DE' auswählen.",
    steps: "Schritt: SELECT * FROM Kunden WHERE Land = 'DE';",
    answer: "SELECT * FROM Kunden WHERE Land = 'DE';",
  },
  {
    id: 86,
    topic: "SQL",
    question: "Was macht ein JOIN in SQL? Kurz erklären.",
    steps: "Schritt: JOIN verbindet zwei Tabellen über gemeinsame Spalte, z.B. KundeID.",
    answer: "JOIN verbindet Tabellen, um zusammenhängende Daten zu kombinieren.",
  },
  {
    id: 87,
    topic: "Programmierung",
    question: "Was ist eine Variable? Erkläre kurz.",
    steps: "Schritt: Variable = Speicherplatz mit Namen, hält Wert eines bestimmten Typs.",
    answer: "Variable ist ein benannter Speicherplatz zur Ablage von Werten.",
  },
  {
    id: 88,
    topic: "Programmierung",
    question: "Erkläre kurz den Unterschied zwischen '==' und '=' in vielen Programmiersprachen.",
    steps: "Schritt: '=' Zuweisung, '==' Vergleich (Gleichheit).",
    answer: "'=' weist zu; '==' vergleicht Werte.",
  },
  {
    id: 89,
    topic: "Programmierung",
    question: "Was ist eine Variable? Erkläre kurz.",
    steps: "Schritt: Variable = Speicherplatz mit Namen, hält Wert eines bestimmten Typs.",
    answer: "Variable ist ein benannter Speicherplatz zur Ablage von Werten.",
  },
  {
    id: 90,
    topic: "Programmierung",
    question: "Erkläre kurz den Unterschied zwischen '==' und '=' in vielen Programmiersprachen.",
    steps: "Schritt: '=' Zuweisung, '==' Vergleich (Gleichheit).",
    answer: "'=' weist zu; '==' vergleicht Werte.",
  },
  {
    id: 91,
    topic: "Programmierung",
    question: "Was ist eine Variable? Erkläre kurz.",
    steps: "Schritt: Variable = Speicherplatz mit Namen, hält Wert eines bestimmten Typs.",
    answer: "Variable ist ein benannter Speicherplatz zur Ablage von Werten.",
  },
  {
    id: 92,
    topic: "Programmierung",
    question: "Erkläre kurz den Unterschied zwischen '==' und '=' in vielen Programmiersprachen.",
    steps: "Schritt: '=' Zuweisung, '==' Vergleich (Gleichheit).",
    answer: "'=' weist zu; '==' vergleicht Werte.",
  },
  {
    id: 93,
    topic: "Programmierung",
    question: "Was ist eine Variable? Erkläre kurz.",
    steps: "Schritt: Variable = Speicherplatz mit Namen, hält Wert eines bestimmten Typs.",
    answer: "Variable ist ein benannter Speicherplatz zur Ablage von Werten.",
  },
  {
    id: 94,
    topic: "Programmierung",
    question: "Erkläre kurz den Unterschied zwischen '==' und '=' in vielen Programmiersprachen.",
    steps: "Schritt: '=' Zuweisung, '==' Vergleich (Gleichheit).",
    answer: "'=' weist zu; '==' vergleicht Werte.",
  },
  {
    id: 95,
    topic: "Programmierung",
    question: "Was ist eine Variable? Erkläre kurz.",
    steps: "Schritt: Variable = Speicherplatz mit Namen, hält Wert eines bestimmten Typs.",
    answer: "Variable ist ein benannter Speicherplatz zur Ablage von Werten.",
  },
  {
    id: 96,
    topic: "Programmierung",
    question: "Erkläre kurz den Unterschied zwischen '==' und '=' in vielen Programmiersprachen.",
    steps: "Schritt: '=' Zuweisung, '==' Vergleich (Gleichheit).",
    answer: "'=' weist zu; '==' vergleicht Werte.",
  },
  {
    id: 97,
    topic: "Algorithmen",
    question: "Was ist die Laufzeitkomplexität von linearer Suche (linear search)?",
    steps: "Schritt: Durchsucht Liste elementweise -> O(n) im Worst-Case.",
    answer: "O(n)",
  },
  {
    id: 98,
    topic: "Algorithmen",
    question: "Beschreibe kurz, was ein Algorithmus ist.",
    steps: "Schritt: Schrittweise Anleitung zur Lösung eines Problems, endlich und deterministisch.",
    answer: "Algorithmus = eindeutige, endliche Abfolge von Schritten zur Lösung eines Problems.",
  },
  {
    id: 99,
    topic: "Algorithmen",
    question: "Was ist die Laufzeitkomplexität von linearer Suche (linear search)?",
    steps: "Schritt: Durchsucht Liste elementweise -> O(n) im Worst-Case.",
    answer: "O(n)",
  },
  {
    id: 100,
    topic: "Algorithmen",
    question: "Beschreibe kurz, was ein Algorithmus ist.",
    steps: "Schritt: Schrittweise Anleitung zur Lösung eines Problems, endlich und deterministisch.",
    answer: "Algorithmus = eindeutige, endliche Abfolge von Schritten zur Lösung eines Problems.",
  },
  {
    id: 101,
    topic: "Algorithmen",
    question: "Was ist die Laufzeitkomplexität von linearer Suche (linear search)?",
    steps: "Schritt: Durchsucht Liste elementweise -> O(n) im Worst-Case.",
    answer: "O(n)",
  },
  {
    id: 102,
    topic: "Algorithmen",
    question: "Beschreibe kurz, was ein Algorithmus ist.",
    steps: "Schritt: Schrittweise Anleitung zur Lösung eines Problems, endlich und deterministisch.",
    answer: "Algorithmus = eindeutige, endliche Abfolge von Schritten zur Lösung eines Problems.",
  },
  {
    id: 103,
    topic: "OOP",
    question: "Nenne drei Grundprinzipien der objektorientierten Programmierung.",
    steps: "Schritt: Kapselung, Vererbung, Polymorphie; kurz erklären.",
    answer: "Kapselung, Vererbung, Polymorphie.",
  },
  {
    id: 104,
    topic: "OOP",
    question: "Was ist eine Klasse? Kurz erklären.",
    steps: "Schritt: Vorlage/Blueprint für Objekte, definiert Attribute und Methoden.",
    answer: "Klasse = Bauplan für Objekte mit Attributen und Methoden.",
  },
  {
    id: 105,
    topic: "OOP",
    question: "Nenne drei Grundprinzipien der objektorientierten Programmierung.",
    steps: "Schritt: Kapselung, Vererbung, Polymorphie; kurz erklären.",
    answer: "Kapselung, Vererbung, Polymorphie.",
  },
  {
    id: 106,
    topic: "OOP",
    question: "Was ist eine Klasse? Kurz erklären.",
    steps: "Schritt: Vorlage/Blueprint für Objekte, definiert Attribute und Methoden.",
    answer: "Klasse = Bauplan für Objekte mit Attributen und Methoden.",
  },
  {
    id: 107,
    topic: "OOP",
    question: "Nenne drei Grundprinzipien der objektorientierten Programmierung.",
    steps: "Schritt: Kapselung, Vererbung, Polymorphie; kurz erklären.",
    answer: "Kapselung, Vererbung, Polymorphie.",
  },
  {
    id: 108,
    topic: "OOP",
    question: "Was ist eine Klasse? Kurz erklären.",
    steps: "Schritt: Vorlage/Blueprint für Objekte, definiert Attribute und Methoden.",
    answer: "Klasse = Bauplan für Objekte mit Attributen und Methoden.",
  },
  {
    id: 109,
    topic: "Wiederholung",
    question: "Nenne zwei wichtige Prüfungsstrategien für AP I.",
    steps: "Schritt: Zeitmanagement, Fehleranalyse, Priorisieren von Aufgaben, Wiederholung falscher Aufgaben.",
    answer: "Zeitlimit einhalten; Fehlerkatalog führen; ähnliche Aufgaben wiederholen.",
  },
  {
    id: 110,
    topic: "Wiederholung",
    question: "Nenne zwei wichtige Prüfungsstrategien für AP I.",
    steps: "Schritt: Zeitmanagement, Fehleranalyse, Priorisieren von Aufgaben, Wiederholung falscher Aufgaben.",
    answer: "Zeitlimit einhalten; Fehlerkatalog führen; ähnliche Aufgaben wiederholen.",
  },
  {
    id: 111,
    topic: "Wiederholung",
    question: "Nenne zwei wichtige Prüfungsstrategien für AP I.",
    steps: "Schritt: Zeitmanagement, Fehleranalyse, Priorisieren von Aufgaben, Wiederholung falscher Aufgaben.",
    answer: "Zeitlimit einhalten; Fehlerkatalog führen; ähnliche Aufgaben wiederholen.",
  },
  {
    id: 112,
    topic: "Wiederholung",
    question: "Nenne zwei wichtige Prüfungsstrategien für AP I.",
    steps: "Schritt: Zeitmanagement, Fehleranalyse, Priorisieren von Aufgaben, Wiederholung falscher Aufgaben.",
    answer: "Zeitlimit einhalten; Fehlerkatalog führen; ähnliche Aufgaben wiederholen.",
  },
  {
    id: 113,
    topic: "Wiederholung",
    question: "Nenne zwei wichtige Prüfungsstrategien für AP I.",
    steps: "Schritt: Zeitmanagement, Fehleranalyse, Priorisieren von Aufgaben, Wiederholung falscher Aufgaben.",
    answer: "Zeitlimit einhalten; Fehlerkatalog führen; ähnliche Aufgaben wiederholen.",
  },
  {
    id: 114,
    topic: "Wiederholung",
    question: "Nenne zwei wichtige Prüfungsstrategien für AP I.",
    steps: "Schritt: Zeitmanagement, Fehleranalyse, Priorisieren von Aufgaben, Wiederholung falscher Aufgaben.",
    answer: "Zeitlimit einhalten; Fehlerkatalog führen; ähnliche Aufgaben wiederholen.",
  },
  {
    id: 115,
    topic: "Wiederholung",
    question: "Nenne zwei wichtige Prüfungsstrategien für AP I.",
    steps: "Schritt: Zeitmanagement, Fehleranalyse, Priorisieren von Aufgaben, Wiederholung falscher Aufgaben.",
    answer: "Zeitlimit einhalten; Fehlerkatalog führen; ähnliche Aufgaben wiederholen.",
  },
  {
    id: 116,
    topic: "Wiederholung",
    question: "Nenne zwei wichtige Prüfungsstrategien für AP I.",
    steps: "Schritt: Zeitmanagement, Fehleranalyse, Priorisieren von Aufgaben, Wiederholung falscher Aufgaben.",
    answer: "Zeitlimit einhalten; Fehlerkatalog führen; ähnliche Aufgaben wiederholen.",
  },
  {
    id: 117,
    topic: "Wiederholung",
    question: "Nenne zwei wichtige Prüfungsstrategien für AP I.",
    steps: "Schritt: Zeitmanagement, Fehleranalyse, Priorisieren von Aufgaben, Wiederholung falscher Aufgaben.",
    answer: "Zeitlimit einhalten; Fehlerkatalog führen; ähnliche Aufgaben wiederholen.",
  },
  {
    id: 118,
    topic: "Wiederholung",
    question: "Nenne zwei wichtige Prüfungsstrategien für AP I.",
    steps: "Schritt: Zeitmanagement, Fehleranalyse, Priorisieren von Aufgaben, Wiederholung falscher Aufgaben.",
    answer: "Zeitlimit einhalten; Fehlerkatalog führen; ähnliche Aufgaben wiederholen.",
  },
  {
    id: 119,
    topic: "Wiederholung",
    question: "Nenne zwei wichtige Prüfungsstrategien für AP I.",
    steps: "Schritt: Zeitmanagement, Fehleranalyse, Priorisieren von Aufgaben, Wiederholung falscher Aufgaben.",
    answer: "Zeitlimit einhalten; Fehlerkatalog führen; ähnliche Aufgaben wiederholen.",
  },
  {
    id: 120,
    topic: "Wiederholung",
    question: "Nenne zwei wichtige Prüfungsstrategien für AP I.",
    steps: "Schritt: Zeitmanagement, Fehleranalyse, Priorisieren von Aufgaben, Wiederholung falscher Aufgaben.",
    answer: "Zeitlimit einhalten; Fehlerkatalog führen; ähnliche Aufgaben wiederholen.",
  },
];

export default questions;
